#!/usr/bin/env python3
import subprocess
import sys

from pathlib import Path


def generate_grpc_files():
    root = Path(__file__).parent.parent
    proto_path = root / "proto"
    generated_path = root / "generated"
    
    if not proto_path.exists():
        print("‚ùå –î–∏—Ä–µ–∫—Ç–æ—Ä–∏—è proto –Ω–µ –Ω–∞–π–¥–µ–Ω–∞!")
        print("   –ó–∞–ø—É—Å—Ç–∏—Ç–µ —Å–∫—Ä–∏–ø—Ç –∏–∑ –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–∏ services/connections")
        sys.exit(1)
    
    generated_path.mkdir(exist_ok=True)
    
    cmd = [
        "python", "-m", "grpc_tools.protoc",
        f"--python_out={generated_path}",
        f"--grpc_python_out={generated_path}",
        f"--proto_path={proto_path}",
        f"{proto_path / 'connections.proto'}"
    ]
    
    print("üîß –ì–µ–Ω–µ—Ä–∞—Ü–∏—è gRPC —Ñ–∞–π–ª–æ–≤...")
    print(f"   –ö–æ–º–∞–Ω–¥–∞: {' '.join(cmd)}")
    
    try:
        result = subprocess.run(cmd, check=True, capture_output=True, text=True)
        print("‚úÖ gRPC —Ñ–∞–π–ª—ã —É—Å–ø–µ—à–Ω–æ —Å–≥–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞–Ω—ã!")
        print("   –°–æ–∑–¥–∞–Ω—ã —Ñ–∞–π–ª—ã –≤ services/connections/generated/:")
        print("   - connections_pb2.py")
        print("   - connections_pb2_grpc.py")
        
    except subprocess.CalledProcessError as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏ gRPC —Ñ–∞–π–ª–æ–≤:")
        print(f"   {e.stderr}")
        sys.exit(1)
    except FileNotFoundError:
        print("‚ùå grpc_tools –Ω–µ –Ω–∞–π–¥–µ–Ω!")
        print("   –£—Å—Ç–∞–Ω–æ–≤–∏—Ç–µ: pip install grpcio-tools")
        sys.exit(1)

if __name__ == "__main__":
    generate_grpc_files()
